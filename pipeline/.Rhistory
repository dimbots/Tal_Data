lapply(avg_exp_Setdb1KO, function(x) write.table( data.frame(x), 'test.csv'  , append= T, sep="\t" ))
split_obj = SplitObject(Lgr5Cre_MERGED, split.by = "orig.ident")
# See how the objects are named
View(split_obj)
Setdb1KO = split_obj[["Setdb1KO"]]
WT = split_obj[["Lgr5Cre"]]
library(dplyr)
library(Seurat)
library(patchwork)
library(DoubletFinder)
library(data.table)
library(magrittr)
library(ggplot2)
library(cowplot)
library(stringr)
rm(Lgr5Cre_Setdb1KO)
rm(Lgr5Cre_Setdb1KO_A)
rm(Lgr5Cre_Setdb1KO_A.data)
rm(Lgr5Cre_Setdb1KO_B)
rm(Lgr5Cre_Setdb1KO_B.data)
rm(Lgr5Cre_Setdb1KO.filt)
rm(Lgr5Cre_WT)
rm(Lgr5Cre_WT_A)
rm(Lgr5Cre_WT_A.data)
rm(Lgr5Cre_WT_B)
rm(Lgr5Cre_WT_B.data)
rm(Lgr5Cre_WT.filt)
gc()
View(Lgr5Cre_MERGED)
Setdb1KO = Lgr5Cre_MERGED[["Setdb1KO"]]
split_obj = SplitObject(Lgr5Cre_MERGED, split.by = "orig.ident")
Setdb1KO = split_obj[["Setdb1KO"]]
WT = split_obj[["Lgr5Cre"]]
gc()
save.image("/media/dimbo/10T/data/talianidis_data/scRNA_seq/Talianidis_GFP_2_fixed/analysis/Seurat/SEURAT_LOW_RAM.RDATA")
pdf("Setdb1KO-ViolinPlot_per_Cluster.pdf", width=18, height=10)
VlnPlot(Setdb1KO, features = c("nFeature_RNA", "nCount_RNA"), ncol = 2)
p + ggtitle("Setdb1KO") + RotatedAxis()
dev.off()
pdf("WT-ViolinPlot_per_Cluster.pdf", width=18, height=10)
VlnPlot(WT, features = c("nFeature_RNA", "nCount_RNA"), ncol = 2)
p + ggtitle("WT") + RotatedAxis()
dev.off()
pdf("Setdb1KO-ViolinPlot_per_Cluster.pdf", width=18, height=10)
VlnPlot(Setdb1KO, features = c("nFeature_RNA", "nCount_RNA"), ncol = 2)
p + ggtitle("Setdb1KO") + RotatedAxis()
dev.off()
VlnPlot(Setdb1KO, features = c("nFeature_RNA", "nCount_RNA"), ncol = 2)
gc()
VlnPlot(Setdb1KO, features = c("nFeature_RNA", "nCount_RNA"), ncol = 2)
pdf("Setdb1KO-ViolinPlot_per_Cluster.pdf", width=18, height=10)
VlnPlot(Setdb1KO, features = c("nFeature_RNA", "nCount_RNA"), ncol = 2)
dev.off()
pdf("Setdb1KO-ViolinPlot_per_Cluster.pdf", width=18, height=10)
VlnPlot(Setdb1KO, features = c("nFeature_RNA", "nCount_RNA"), ncol = 2)
p + ggtitle("Setdb1KO") + RotatedAxis()
dev.off()
pdf("Setdb1KO-ViolinPlot_per_Cluster.pdf", width=18, height=10)
VlnPlot(Setdb1KO, features = c("nFeature_RNA", "nCount_RNA"), ncol = 2)
dev.off()
pdf("WT-ViolinPlot_per_Cluster.pdf", width=18, height=10)
VlnPlot(WT, features = c("nFeature_RNA", "nCount_RNA"), ncol = 2)
dev.off()
pdf("Merged_ViolinPlot_per_Cluster.pdf", width=18, height=10)
VlnPlot(Lgr5Cre_MERGED, features = c("nFeature_RNA", "nCount_RNA"), split.by = "orig.ident", ncol = 2)
dev.off()
avg_exp_Setdb1KO = (AverageExpression(object = Setdb1KO`))
)
avg_exp_Setdb1KO = (AverageExpression(object = Setdb1KO))
)
''
``
avg_exp_Setdb1KO = (AverageExpression(object = Setdb1KO))
avg_exp_WT = (AverageExpression(object = WT))
class(avg_exp_Setdb1KO)
View(avg_exp_Setdb1KO)
avg_exp_Setdb1KO
library("rio")
library(rio)
sink("output.txt")
print(avg_exp_Setdb1KO)
sink()
avg_exp_Setdb1KO
View(avg_exp_Setdb1KO)
View(avg_exp_WT)
View(avg_exp_WT)
View(avg_exp_WT)
View(avg_exp_WT)
View(avg_exp_WT)
write.table(avg_exp_Setdb1KO, file = "mtcars.txt", sep = "\t",
row.names = TRUE, col.names = NA)
write.table(avg_exp_Setdb1KO, file = "avg_exp_Setdb1KO.txt", sep = "\t",
row.names = TRUE, col.names = NA)
write.table(avg_exp_WT, file = "avg_exp_WT", sep = "\t",
row.names = TRUE, col.names = NA)
write.table(avg_exp_WT, file = "avg_exp_WT.txt", sep = "\t",
row.names = TRUE, col.names = NA)
save.image("/media/dimbo/10T/data/talianidis_data/scRNA_seq/Talianidis_GFP_2_fixed/analysis/Seurat/SEURAT_LOW_RAM.RDATA")
gc()
save.image("/media/dimbo/10T/data/talianidis_data/scRNA_seq/Talianidis_GFP_2_fixed/analysis/Seurat/SEURAT.RDATA")
gc()
rm (split_obj)
gc()
rm(Setdb1KO)
rm(WT)
gc()
split_obj = SplitObject(Lgr5Cre_MERGED, split.by = "orig.ident")
# See how the objects are named
View(split_obj)
Setdb1KO = split_obj[["Setdb1KO"]]
WT = split_obj[["Lgr5Cre"]]
library(dplyr)
library(Seurat)
library(patchwork)
library(DoubletFinder)
library(data.table)
library(magrittr)
library(ggplot2)
library(cowplot)
library(stringr)
split_obj = SplitObject(Lgr5Cre_MERGED, split.by = "orig.ident")
# See how the objects are named
View(split_obj)
Setdb1KO = split_obj[["Setdb1KO"]]
WT = split_obj[["Lgr5Cre"]]
library(dplyr)
library(Seurat)
library(patchwork)
library(DoubletFinder)
library(data.table)
library(magrittr)
library(ggplot2)
library(cowplot)
library(stringr)
rm(Lgr5Cre_Setdb1KO)
rm(Lgr5Cre_Setdb1KO_A)
rm(Lgr5Cre_Setdb1KO_A.data)
rm(Lgr5Cre_Setdb1KO_B)
rm(Lgr5Cre_Setdb1KO_B.data)
rm(Lgr5Cre_Setdb1KO.filt)
rm(Lgr5Cre_WT)
rm(Lgr5Cre_WT_A)
rm(Lgr5Cre_WT_A.data)
rm(Lgr5Cre_WT_B)
rm(Lgr5Cre_WT_B.data)
rm(Lgr5Cre_WT.filt)
split_obj = SplitObject(Lgr5Cre_MERGED, split.by = "orig.ident")
# See how the objects are named
View(split_obj)
Setdb1KO = split_obj[["Setdb1KO"]]
WT = split_obj[["Lgr5Cre"]]
gc()
avg_exp_Setdb1KO = (AverageExpression(object = Setdb1KO))
avg_exp_WT = (AverageExpression(object = WT))
write.table(avg_exp_Setdb1KO, file = "avg_exp_Setdb1KO.txt", sep = "\t",
row.names = TRUE, col.names = NA)
write.table(avg_exp_WT, file = "avg_exp_WT.txt", sep = "\t",
row.names = TRUE, col.names = NA)
library(dplyr)
library(Seurat)
library(patchwork)
library(DoubletFinder)
library(data.table)
library(magrittr)
library(ggplot2)
library(cowplot)
library(stringr)
rm(Lgr5Cre_Setdb1KO)
rm(Lgr5Cre_Setdb1KO_A)
rm(Lgr5Cre_Setdb1KO_A.data)
rm(Lgr5Cre_Setdb1KO_B)
rm(Lgr5Cre_Setdb1KO_B.data)
rm(Lgr5Cre_Setdb1KO.filt)
rm(Lgr5Cre_WT)
rm(Lgr5Cre_WT_A)
rm(Lgr5Cre_WT_A.data)
rm(Lgr5Cre_WT_B)
rm(Lgr5Cre_WT_B.data)
rm(Lgr5Cre_WT.filt)
# Create metadata from main object. e.g export WT and Setdb1KO from Merged object and create two new objects
split_obj = SplitObject(Lgr5Cre_MERGED, split.by = "orig.ident")
# See how the objects are named
View(split_obj)
Setdb1KO = split_obj[["Setdb1KO"]]
WT = split_obj[["Lgr5Cre"]]
Setdb1KO
WT
avg_exp_Setdb1KO = (AverageExpression(object = Setdb1KO))
avg_exp_WT = (AverageExpression(object = WT))
gc()
write.table(avg_exp_Setdb1KO, file = "avg_exp_Setdb1KO.txt", sep = "\t",
row.names = TRUE, col.names = NA)
write.table(avg_exp_WT, file = "avg_exp_WT.txt", sep = "\t",
row.names = TRUE, col.names = NA)
require(tsne)
require(pheatmap)
require(MASS)
require(cluster)
require(mclust)
require(flexmix)
require(lattice)
require(fpc)
require(amap)
require(RColorBrewer)
require(locfit)
require(vegan)
library(dplyr)
library(Seurat)
library(patchwork)
library(DoubletFinder)
library(data.table)
library(magrittr)
library(ggplot2)
library(cowplot)
library(stringr)
aLgr5Cre_MERGED$orig.ident = paste(Idents(Lgr5Cre_MERGED)), Lgr5Cre_MERGED$Set
Lgr5Cre_MERGED
View(Lgr5Cre_MERGED)
Lgr5Cre_MERGED$orig.ident = paste(Idents(Lgr5Cre_MERGED)), Lgr5Cre_MERGED$Setdb1KO, sep= "_")
Lgr5Cre_MERGED$orig.ident = paste(Idents(Lgr5Cre_MERGED)), Lgr5Cre_MERGED$Setdb1KO, sep= "_")
Lgr5Cre_MERGED$celltype.Setdb1KO <- paste(Idents(Lgr5Cre_MERGED), Lgr5Cre_MERGED$Setdb1KO, sep = "_")
split_obj$celltype.Setdb1KO <- paste(Idents(split_obj), split_obj$Setdb1KO, sep = "_")
gc()
\
Lgr5Cre_MERGED$orig.ident.Setdb1KO  paste(Idents(Lgr5Cre_MERGED), Lgr5Cre_MERGED$Setdb1KO, sep = "_")
Lgr5Cre_MERGED$orig.ident.Setdb1KO = paste(Idents(Lgr5Cre_MERGED), Lgr5Cre_MERGED$Setdb1KO, sep = "_")
split_obj$orig.ident.Setdb1KO = paste(Idents(split_obj), split_obj$Setdb1KO, sep = "_")
library(dplyr)
library(Seurat)
library(patchwork)
library(DoubletFinder)
library(data.table)
library(magrittr)
library(ggplot2)
library(cowplot)
library(stringr)
########################################################################################################################################################################################################################
# CREATE OBJECT Lgr5Cre_SETDB1KO
# Load dataset A (Object A)
Lgr5Cre_Setdb1KO_A.data=Read10X(data.dir = "/media/dimbo/10T/data/talianidis_data/scRNA_Seq/Talianidis_GFP_2_fixed/analysis/Cellranger/run_count_21L004866/outs/filtered_feature_bc_matrix/")
Lgr5Cre_Setdb1KO_A = CreateSeuratObject(counts = Lgr5Cre_Setdb1KO_A.data, project = "Setdb1KO A", min.cells = 3, min.features = 200)
# Load dataset B (Object B)
Lgr5Cre_Setdb1KO_B.data <- Read10X(data.dir = "/media/dimbo/10T/data/talianidis_data/scRNA_Seq/Talianidis_GFP_2_fixed/analysis/Cellranger/run_count_21L004870/outs/filtered_feature_bc_matrix/")
Lgr5Cre_Setdb1KO_B = CreateSeuratObject(counts = Lgr5Cre_Setdb1KO_B.data, project = "Setdb1KO B", min.cells = 3, min.features = 200)
# Merge objects
Lgr5Cre_Setdb1KO=merge(Lgr5Cre_Setdb1KO_A, y=Lgr5Cre_Setdb1KO_B, add.cell.ids=c("Rep_A","Rep_B"), project="Lgr5Cre_Setdb1KO")
##################################################################################################################################################################################################################
# CREATE OBJECT LGR5Cre_WT
# Load dataset A (Object A)
Lgr5Cre_WT_A.data=Read10X(data.dir = "/media/dimbo/10T/data/talianidis_data/scRNA_Seq/Talianidis_GFP_2_fixed/analysis/Cellranger/run_count_21L004858/outs/filtered_feature_bc_matrix/")
Lgr5Cre_WT_A = CreateSeuratObject(counts = Lgr5Cre_WT_A.data, project = "Lgr5Cre A", min.cells = 3, min.features = 200)
# Load dataset B (Object B)
Lgr5Cre_WT_B.data <- Read10X(data.dir = "/media/dimbo/10T/data/talianidis_data/scRNA_Seq/Talianidis_GFP_2_fixed/analysis/Cellranger/run_count_21L004862/outs/filtered_feature_bc_matrix/")
Lgr5Cre_WT_B = CreateSeuratObject(counts = Lgr5Cre_WT_B.data, project = "Lgr5Cre B", min.cells = 3, min.features = 200)
# Merge objects
Lgr5Cre_WT=merge(Lgr5Cre_WT_A, y=Lgr5Cre_WT_B, add.cell.ids=c("Rep_A","Rep_B"), project="Lgr5Cre_WT")
##################################################################################################################################################################################################################
#FIND DOUBLETS IN EACH CONDITION SEPARATELY
Lgr5Cre_Setdb1KO <- NormalizeData(Lgr5Cre_Setdb1KO, normalization.method = "LogNormalize", scale.factor = 10000)
Lgr5Cre_Setdb1KO <- FindVariableFeatures(Lgr5Cre_Setdb1KO, selection.method = "vst", nfeatures = 2000)
all.genes <- rownames(Lgr5Cre_Setdb1KO)
Lgr5Cre_Setdb1KO <- ScaleData(Lgr5Cre_Setdb1KO, features = all.genes)
Lgr5Cre_Setdb1KO <- RunPCA(Lgr5Cre_Setdb1KO, features = VariableFeatures(object = Lgr5Cre_Setdb1KO))
Lgr5Cre_Setdb1KO <- RunUMAP(Lgr5Cre_Setdb1KO, dims = 1:10)
nExp <- round(ncol(Lgr5Cre_Setdb1KO) * 0.069)
Lgr5Cre_Setdb1KO.filt <- doubletFinder_v3(Lgr5Cre_Setdb1KO, pN = 0.25, pK = 0.09, nExp = nExp, PCs = 1:10)
DF.name = colnames(Lgr5Cre_Setdb1KO.filt@meta.data)[grepl("DF.classification", colnames(Lgr5Cre_Setdb1KO.filt@meta.data))]
pdf("CowPlot_Setdb1KO.pdf", width=15, height=8)
cowplot::plot_grid(ncol = 2, DimPlot(Lgr5Cre_Setdb1KO.filt, group.by = DF.name) + NoAxes())
dev.off()
pdf("VlnPlot_Setdb1KO.pdf", width=15, height=8)
VlnPlot(Lgr5Cre_Setdb1KO.filt, features = "nFeature_RNA", group.by = DF.name, pt.size = 0.1)
dev.off()
Lgr5Cre_Setdb1KO.filt = Lgr5Cre_Setdb1KO.filt[, Lgr5Cre_Setdb1KO.filt@meta.data[, DF.name] == "Singlet"]
##################################################################################################################################################################################################################
Lgr5Cre_WT <- NormalizeData(Lgr5Cre_WT, normalization.method = "LogNormalize", scale.factor = 10000)
Lgr5Cre_WT <- FindVariableFeatures(Lgr5Cre_WT, selection.method = "vst", nfeatures = 2000)
all.genes <- rownames(Lgr5Cre_WT)
Lgr5Cre_WT <- ScaleData(Lgr5Cre_WT, features = all.genes)
Lgr5Cre_WT <- RunPCA(Lgr5Cre_WT, features = VariableFeatures(object = Lgr5Cre_Setdb1KO))
Lgr5Cre_WT <- RunUMAP(Lgr5Cre_WT, dims = 1:10)
nExp <- round(ncol(Lgr5Cre_WT) * 0.057)
Lgr5Cre_WT.filt <- doubletFinder_v3(Lgr5Cre_WT, pN = 0.25, pK = 0.09, nExp = nExp, PCs = 1:10)
DF.name = colnames(Lgr5Cre_WT.filt@meta.data)[grepl("DF.classification", colnames(Lgr5Cre_WT.filt@meta.data))]
pdf("CowPlot_WT.pdf", width=15, height=8)
cowplot::plot_grid(ncol = 2, DimPlot(Lgr5Cre_WT.filt, group.by = DF.name) + NoAxes())
dev.off()
pdf("VlnPlot_WT.pdf", width=15, height=8)
VlnPlot(Lgr5Cre_WT.filt, features = "nFeature_RNA", group.by = DF.name, pt.size = 0.1)
dev.off()
# CREATE OBJECT Lgr5Cre_SETDB1KO
# Load dataset A (Object A)
Lgr5Cre_Setdb1KO_A.data=Read10X(data.dir = "/media/dimbo/10T/data/talianidis_data/scRNA_Seq/Talianidis_GFP_2_fixed/analysis/Cellranger/run_count_21L004866/outs/filtered_feature_bc_matrix/")
Lgr5Cre_Setdb1KO_A = CreateSeuratObject(counts = Lgr5Cre_Setdb1KO_A.data, project = "Setdb1KO A", min.cells = 3, min.features = 200)
# Load dataset B (Object B)
gc()
Lgr5Cre_Setdb1KO_A.data=Read10X(data.dir = "/media/dimbo/10T/data/talianidis_data/scRNA_seq/Talianidis_GFP_2_fixed/analysis/Cellranger/run_count_21L004866/outs/filtered_feature_bc_matrix/")
Lgr5Cre_Setdb1KO_A.data=Read10X(data.dir = "/media/dimbo/10T/data/talianidis_data/scRNA_Seq/Talianidis_GFP_2_fixed/analysis/Cellranger/run_count_21L004866/outs/filtered_feature_bc_matrix/")
Lgr5Cre_Setdb1KO_A.data=Read10X(data.dir = "/media/dimbo/10T/data/talianidis_data/scRNA_seq/Talianidis_GFP_2_fixed/analysis/Cellranger/run_count_21L004866/outs/filtered_feature_bc_matrix/")
Lgr5Cre_Setdb1KO_A.data=Read10X(data.dir = "/media/dimbo/10T/data/talianidis_data/scRNA_Seq/Talianidis_GFP_2_fixed/analysis/Cellranger/run_count_21L004866/outs/filtered_feature_bc_matrix/")
library(dplyr)
library(Seurat)
library(patchwork)
library(DoubletFinder)
library(data.table)
library(magrittr)
library(ggplot2)
library(cowplot)
library(stringr)
View(Lgr5Cre_MERGED)
gc()
library(dplyr)
library(Seurat)
library(patchwork)
library(DoubletFinder)
library(data.table)
library(magrittr)
library(ggplot2)
library(cowplot)
library(stringr)
rm(Lgr5Cre_Setdb1KO)
rm(Lgr5Cre_Setdb1KO_A)
rm(Lgr5Cre_Setdb1KO_A.data)
rm(Lgr5Cre_Setdb1KO_B)
rm(Lgr5Cre_Setdb1KO_B.data)
rm(Lgr5Cre_Setdb1KO.filt)
library(dplyr)
library(Seurat)
library(patchwork)
library(DoubletFinder)
library(data.table)
library(magrittr)
library(ggplot2)
library(cowplot)
library(stringr)
setwd("/media/dimbo/10T/data/talianidis_data/scRNA_seq/Talianidis_GFP_2_fixed/analysis/Seurat/")
pdf("Setdb1KO-ViolinPlot_percent.mt.pdf", width=18, height=10)
VlnPlot(Setdb1KO, features = c("percent.mt"), ncol = 2)
dev.off()
pdf("WT-ViolinPlot_percent.mt.pdf", width=18, height=10)
VlnPlot(WT, features = c("percent.mt"), ncol = 2)
dev.off()
library(dplyr)
library(Seurat)
library(patchwork)
library(DoubletFinder)
library(data.table)
library(magrittr)
library(ggplot2)
library(cowplot)
library(stringr)
getwd()
pdf("Retroviral Markers.pdf", width=15, height=8)
p = DotPlot(Lgr5Cre_MERGED,features = c("Zbp1", "Irf7", "Isg15", "Ifi44", "Oasl1", "Efnb1", "Cxcl1"), group.by = "orig.ident", cols = c("blue","orange")) + RotatedAxis()
p + ggtitle("Retroviral Markers")
dev.off()
pdf("Retroviral Markers.pdf", width=15, height=8)
p = DotPlot(Lgr5Cre_MERGED,features = c("Zbp1", "Irf7", "Isg15", "Ifi44", "Oasl1", "Efnb1", "Cxcl1"), cols = c("blue","orange")) + RotatedAxis()
p + ggtitle("Retroviral Markers")
dev.off()
pdf("Retroviral Markers.pdf", width=15, height=8)
p = DotPlot(Lgr5Cre_MERGED,features = c("Zbp1", "Irf7", "Isg15", "Ifi44", "Oasl1", "Efnb1", "Cxcl1"), group.by = "orig.ident", cols = c("blue","orange")) + RotatedAxis()
p + ggtitle("Retroviral Markers")
dev.off()
pdf("Violin Plot_Zbp1.pdf", width=15, height=10)
plots <- VlnPlot(Lgr5Cre_MERGED, features = c("Zbp1"), split.by = "orig.ident", pt.size = 0, combine = FALSE)
wrap_plots(plots = plots, ncol = 1)
dev.off()
ls()
Lgr5Cre_MERGED_Renamed=RenameIdents(Lgr5Cre_MERGED,  `0` = "Stem", `1` = "Enterocyte Progenitor I", `2` = "Goblet I", `3` = "Stem - TA", `4` = "?", `5` = "Enterocyte Progenitor II", `6` = "Goblet II", `7` = "Enterocyte Mature I", `8` = "Paneth", `9` = "Enterocyte Mature II", `10` = "Enderoendocrine I", `11` = "Tuft", `12` = "Enterocyte immature", `13` = "Enteroendocrine II", `14` = "Necroptosis")
DimPlot(Lgr5Cre_MERGED_Renamed, label = TRUE)
ls()
subset(x=Lgr5Cre_MERGED_Renamed, idents = c("Stem","Enterocyte Progenitor II", "Enterocyte Progenitor I")
)
Lgr5Cre_MERGED_Renamed
Stem_Progenitro = subset(x=Lgr5Cre_MERGED_Renamed, idents = c("Stem","Enterocyte Progenitor II", "Enterocyte Progenitor I"))
Stem_Progenitro
View(Stem_Progenitro)
View(Lgr5Cre_MERGED)
View(Lgr5Cre_MERGED_Renamed)
DimPlot(Stem_Progenitro,label=TRUE, split.by="orig.ident") + NoLegend()
rm(Stem_Progenitro)
rm(Lgr5Cre_MERGED_Renamed)
Lgr5Cre_MERGED_Renamed=RenameIdents(Lgr5Cre_MERGED,  `0` = "Stem", `1` = "Enterocyte Progenitor I", `2` = "Goblet I", `3` = "Stem - TArm(", `4` = "?", `5` = "Enterocyte Progenitor II", `6` = "Goblet II", `7` = "Enterocyte Mature I", `8` = "Paneth", `9` = "Enterocyte Mature II", `10` = "Enderoendocrine I", `11` = "Tuft", `12` = "Enterocyte immature", `13` = "Enteroendocrine II", `14` = "Necroptosis")
DimPlot(Lgr5Cre_MERGED_Renamed, label = TRUE)
Lgr5Cre_MERGED_Renamed=RenameIdents(Lgr5Cre_MERGED,  `0` = "Stem", `1` = "Enterocyte Progenitor I", `2` = "Goblet I", `3` = "Stem - TA", `4` = "?", `5` = "Enterocyte Progenitor II", `6` = "Goblet II", `7` = "Enterocyte Mature I", `8` = "Paneth", `9` = "Enterocyte Mature II", `10` = "Enderoendocrine I", `11` = "Tuft", `12` = "Enterocyte immature", `13` = "Enteroendocrine II", `14` = "Necroptosis")
DimPlot(Lgr5Cre_MERGED_Renamed, label = TRUE)
cluster_0_4 = subset(x=Lgr5Cre_MERGED, idents = c("0", "4")
)
cluster_0_4_1 = subset(x=Lgr5Cre_MERGED, idents = c("0", "4", "1"))
cluster_0_4_1_5 = subset(x=Lgr5Cre_MERGED, idents = c("0", "4", "1","5"))
cluster_0 = subset(x=Lgr5Cre_MERGED, idents = c("0"))
pdf("umapPlot_Cluster_0.pdf", width=15, height=8)
DimPlot(cluster_0,label=TRUE, split.by="orig.ident") + NoLegend()
dev.off()
pdf("umapPlot_Cluster_0_4.pdf", width=15, height=8)
DimPlot(cluster_0_4,label=TRUE, split.by="orig.ident") + NoLegend()
dev.off()
pdf("umapPlot_Cluster_0_4_1.pdf", width=15, height=8)
DimPlot(cluster_0_4_1,label=TRUE, split.by="orig.ident") + NoLegend()
dev.off()
pdf("umapPlot_Cluster_0_4_1_5.pdf", width=15, height=8)
DimPlot(cluster_0_4_1_5,label=TRUE, split.by="orig.ident") + NoLegend()
dev.off()
s.genes <- cc.genes$s.genes
g2m.genes <- cc.genes$g2m.genes
library(dplyr)
library(Seurat)
library(patchwork)
library(DoubletFinder)
library(data.table)
library(magrittr)
library(ggplot2)
library(cowplot)
library(stringr)
ls()
rm(Setdb1KO)
rm(split_obj)
rm(WT)
gc()
s.genes <- cc.genes$s.genes
g2m.genes <- cc.genes$g2m.genes
Lgr5Cre_MERGED <- CellCycleScoring(Lgr5Cre_MERGED, s.features = s.genes, g2m.features = g2m.genes, set.ident = TRUE)
s.genes <- cc.genes$s.genes
s.genes <- tolower(s.genes)
s.genes = str_to_title(s.genes)
g2m.genes <- cc.genes$g2m.genes
g2m.genes <- tolower(g2m.genes)
g2m.genes = str_to_title(g2m.genes)
Lgr5Cre_MERGED <- CellCycleScoring(Lgr5Cre_MERGED, s.features = s.genes, g2m.features = g2m.genes, set.ident = TRUE)
Lgr5Cre_MERGED$CC.Difference <- Lgr5Cre_MERGED$S.Score - Lgr5Cre_MERGED$G2M.Score
Lgr5Cre_MERGED <- ScaleData(Lgr5Cre_MERGED, vars.to.regress = "CC.Difference", features = rownames(Lgr5Cre_MERGED))
gc()
ls()
getwd()
save.image("/media/dimbo/10T/data/talianidis_data/scRNA_seq/Talianidis_GFP_2_fixed/analysis/Seurat/GFP_SEURAT.RData")
Lgr5Cre_MERGED <- RunPCA(Lgr5Cre_MERGED, features = VariableFeatures(Lgr5Cre_MERGED), nfeatures.print = 10)
Lgr5Cre_MERGED <- RunPCA(Lgr5Cre_MERGED, features = c(s.genes, g2m.genes))
DimPlot(Lgr5Cre_MERGED)
pdf("Lgr5cre_Cell_Cycle_AltWorkflow.pdf", width=15, height=8)
DimPlot(Lgr5Cre_MERGED)
dev.off()
save.image("/media/dimbo/10T/data/talianidis_data/scRNA_seq/Talianidis_GFP_2_fixed/analysis/Seurat/GFP_SEURAT.RData")
library(dplyr)
library(Seurat)
library(patchwork)
library(DoubletFinder)
library(data.table)
library(magrittr)
library(ggplot2)
library(cowplot)
library(stringr)
pdf("Enterocyte_Immature Markers.pdf", width=15, height=8)
p =  DotPlot(Lgr5Cre_MERGED,features = c("Reg3g", "Gsdmc4", "Prss32", "Krt8"),cols = c("blue","orange"))
p + ggtitle("Enterocyte Immature Markers") + RotatedAxis()
dev.off()
pdf("Enterocyte_Immature Markers.pdf", width=8, height=8)
p =  DotPlot(Lgr5Cre_MERGED,features = c("Reg3g", "Gsdmc4", "Prss32", "Krt8"),cols = c("blue","orange"))
p + ggtitle("Enterocyte Immature Markers") + RotatedAxis()
dev.off()
setwd("/home/dimbo/Tal_Data/pipeline/")
pdf("Enterocyte_Immature Markers.pdf", width=8, height=5)
p =  DotPlot(Lgr5Cre_MERGED,features = c("Reg3g", "Gsdmc4", "Prss32", "Krt8"),cols = c("blue","orange"))
p + ggtitle("Enterocyte Immature Markers") + RotatedAxis()
dev.off()
# DotPlots per Cluster
pdf("Enterocyte_Immature Markers.pdf", width=8, height=5)
p =  DotPlot(Lgr5Cre_MERGED,features = c("Reg3g", "Gsdmc4", "Prss32", "Krt8"),cols = c("blue","orange"))
p + ggtitle("Enterocyte Immature Markers") + RotatedAxis()
dev.off()
pdf("Enterocyte_Mature Markers.pdf", width=8, height=5)
p = DotPlot(Lgr5Cre_MERGED,features = c("Elf3","Sis","Fabp1","Hnf4aos","Hnf4a", "Hnf4g", "Tmigd1","Fabp6","Slc51b","Slc51a","Mep1a","Fam151a","Naaladl1","Slc34a2","Plb1","Nudt4","Dpep1","Pmp22","Xpnpep2","Muc3","Neu1","Clec2h","Phgr1","Prss30","Aldob","Alpi","Apoa1","Apoa4","Lct"),cols = c("blue","orange")) + RotatedAxis()
p + ggtitle("Enterocyte Mature Markers")
dev.off()
pdf("Enterocyte Progenitor Markers.pdf", width=8, height=5)
p = DotPlot(Lgr5Cre_MERGED,features = c("Ccnb1","Cdc20","Cenpa","Cdkn3","Cdc25c","Ccnb2","Kif22","Ube2c","Sapcd2","Rbp7","Ccna2","Aurka","Cdkn2d","Kif23","Nek2","Birc5","Plk1","Tacc3","Melk","Cps1"),cols = c("blue","orange")) + RotatedAxis()
p + ggtitle("Enterocyte Progenitor Markers")
dev.off()
pdf("Goblet Markers.pdf", width=8, height=5)
p = DotPlot(Lgr5Cre_MERGED,features = c("Muc2","Spdef","Foxa1","Agr2","Spink4","Fcgbp","Tff3","Zg16","Clca1","Ccl6","Klk1","Tpsg1","Ccl9","Txndc5","Tspan13","Atoh1","Lrrc26","Clca3a1","Klf4"),cols = c("blue","orange")) + RotatedAxis()
p + ggtitle("Goblet Markers")
dev.off()
pdf("Paneth Markers.pdf", width=8, height=5)
p = DotPlot(Lgr5Cre_MERGED,features = c("Lyz1","Mmp7","Dll4","Sox9","Gfi1","Gm14851","Defa21","Defa22","Defa17","Defa24","Defa3","Mptx2","Ang4"),cols = c("blue","orange")) + RotatedAxis()
# Gene Gm15284 & Defa-rs1 excluded as there are not in the dataset
p + ggtitle("Paneth Markers")
dev.off()
pdf("Enteroendocrine Markers.pdf", width=8, height=5)
p = DotPlot(Lgr5Cre_MERGED,features = c("Gfi1","Neurog3","Neurod1","Chga","Chgb","Isl1","Arx","Pax6","Foxa2","Sst","Gck","Gcg","Tph1","Pyy","Gfra3","Cpe","Tac1","Fam183b", "Hmgn3","Cck","Fev","Gch1","Pcsk1n", "Bex2","Vwa5b2","Nkx2-2","Marcksl1","Neurod2","Insm1"),cols = c("blue","orange")) + RotatedAxis()
# Gene Ngfrap1 excluded. It can not be found in the dataset
p + ggtitle("Enteroendocrine Markers")
dev.off()
pdf("Stem Markers.pdf", width=8, height=5)
p = DotPlot(Lgr5Cre_MERGED,features = c("Lgr5","Ascl2","Olfm4","Prom1","Axin2","Fzd2","Fzd7","Lrp5","Lrp6","Notch1","Hes1","Smo","Yap1","Igfbp4","Bex1","Gkn3","Slc12a2"),cols = c("blue","orange")) + RotatedAxis()
p + ggtitle("Stem Markers")
dev.off()
pdf("Tuft Markers.pdf", width=8, height=5)
p = DotPlot(Lgr5Cre_MERGED,features = c("Dclk1","Ptprc","Avil","Lrmp","Alox5ap","Rgs13","Sh2d6","Ltc4s","Hck","Cd24a","Trpm5","Kctd12","Aldh2","Il13ra1","Gng13","Tmem176a","Skap2","Ptpn6","Ly6g6f","Fyb","Adh1","Gfi1b","Il25"),cols = c("blue","orange")) + RotatedAxis()
p + ggtitle("Tuft Markers")
dev.off()
pdf("TA Markers.pdf", width=8, height=5)
p = DotPlot(Lgr5Cre_MERGED,features = c("Stmn1", "Tubb5"),cols = c("blue","orange")) + RotatedAxis()
p + ggtitle("TA Markers")
dev.off()
pdf("Reserved Stem Markers.pdf", width=8, height=5)
p = DotPlot(Lgr5Cre_MERGED,features = c("Lrig1", "Bmi1", "Hopx"),cols = c("blue","orange")) + RotatedAxis()
p + ggtitle("Reserved Stem Markers")
dev.off()
pdf("Necroptosis Markers.pdf", width=8, height=5)
p = DotPlot(Lgr5Cre_MERGED,features = c("Zbp1", "Ripk1", "Ripk3", "Cxcl1", "Ccl20", "Tnf", "Csf1" ),cols = c("blue","orange")) + RotatedAxis()
p + ggtitle("Necroptosis Markers")
dev.off()
